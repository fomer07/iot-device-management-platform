spring.application.name=iot-device-management


# Database configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Kafka configuration
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=kafka-319df863
spring.kafka.properties.security.protocol=SSL

spring.kafka.properties.ssl.truststore.password=${KAFKA_TRUSTSTORE_PASSWORD}
spring.kafka.properties.ssl.endpoint.identification.algorithm=https

spring.kafka.properties.ssl.truststore.location=/tmp/client.truststore.jks
spring.kafka.properties.ssl.keystore.location=/tmp/client.keystore.p12
spring.kafka.properties.ssl.truststore.type=JKS
spring.kafka.properties.ssl.keystore.type=PKCS12

spring.kafka.properties.ssl.keystore.password=${KAFKA_KEYSTORE_PASSWORD}
spring.kafka.properties.ssl.key.password=${KAFKA_KEY_PASSWORD}
#spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


jwt.secret = secret
jwt.expiration = 86400000